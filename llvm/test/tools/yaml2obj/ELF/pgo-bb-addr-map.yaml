## Check how yaml2obj produces .llvm_pgo_bb_addr_map sections.

## Fails on windows (https://github.com/llvm/llvm-project/issues/60013).
# UNSUPPORTED: system-windows

# RUN: yaml2obj --docnum=1 %s -o %t1
# RUN: llvm-readobj --sections --section-data %t1 | FileCheck %s

## Case 1: Specify content.
# CHECK:      Section {
# CHECK:        Index: 1
# CHECK-NEXT:   Name: .llvm_pgo_bb_addr_map (1)
# CHECK-NEXT:   Type: SHT_LLVM_PGO_BB_ADDR_MAP (0x6FFF4C0D)
# CHECK-NEXT:   Flags [ (0x0)
# CHECK-NEXT:   ]
# CHECK-NEXT:   Address: 0x0
# CHECK-NEXT:   Offset: 0x40
# CHECK-NEXT:   Size: 13
# CHECK-NEXT:   Link: 0
# CHECK-NEXT:   Info: 0
# CHECK-NEXT:   AddressAlignment: 0
# CHECK-NEXT:   EntrySize: 0
# CHECK-NEXT:   SectionData (
# CHECK-NEXT:     0000: 00000000 00000000 01010203 04
# CHECK-NEXT:   )
# CHECK-NEXT: }

## Case 2: Empty.
# CHECK:        Name: .llvm_pgo_bb_addr_map (1)
# CHECK:        Size:
# CHECK-SAME:   {{^ 0$}}

## Case 3: Specify Size only.
# CHECK:        Name: .llvm_pgo_bb_addr_map (1)
# CHECK:        SectionData (
# CHECK-NEXT:     0000: 00000000 00000000
# CHECK-NEXT:   )

# Case 4: Specify Entries.
# CHECK:        Name: .llvm_pgo_bb_addr_map (1)
# CHECK:        SectionData (
# CHECK-NEXT:     0000: 02072000 00000000 000001E8 070B0102
# CHECK-NEXT:     0010: 43E8070C EEDDBBF7 0E0D91A2 C48801
# CHECK-NEXT:   )

# Case 5: Specify Entries and omit the Address field.
# CHECK:        Name: .llvm_pgo_bb_addr_map (1)
# CHECK:        Address:
# CHECK-SAME:   {{^ 0x0$}}
# CHECK:        SectionData (
# CHECK-NEXT:     0000: 02020000 00000000 0000010C 01020300
# CHECK-NEXT:   )

# Case 6: Override the NumBlocks field.
# CHECK:        Name: .llvm_pgo_bb_addr_map (1)
# CHECK:        SectionData (
# CHECK-NEXT:     0000: 02022000 00000000 0000020D 01020364
# CHECK-NEXT:   )

# Case 7: Not including a field which is enabled in feature doesn't emit value
# CHECK:        Name: .llvm_pgo_bb_addr_map (1)
# CHECK:        SectionData (
# CHECK-NEXT:     0000: 02012000 00000000 0000010E 010203 |
# CHECK-NEXT:   )

--- !ELF
FileHeader:
  Class: ELFCLASS64
  Data:  ELFDATA2LSB
  Type:  ET_EXEC
Sections:

## Test the following cases:

## 1) We can produce an .llvm_pgo_bb_addr_map section from a description with section
##    content.
##  Specify Content.
  - Name:    '.llvm_pgo_bb_addr_map (1)'
    Type:    SHT_LLVM_PGO_BB_ADDR_MAP
    Content: "00000000000000000101020304"

## 2) We can produce an empty .llvm_pgo_bb_addr_map section from a description
##    with empty section content.
  - Name: '.llvm_pgo_bb_addr_map (2)'
    Type: SHT_LLVM_PGO_BB_ADDR_MAP

## 3) We can produce a zero .llvm_pgo_bb_addr_map section of a specific size when
##    we specify the size only.
  - Name: '.llvm_pgo_bb_addr_map (3)'
    Type: SHT_LLVM_PGO_BB_ADDR_MAP
    Size: 8

## 4) We can produce an .llvm_pgo_bb_addr_map section from a description with
##    Entries.
  - Name: '.llvm_pgo_bb_addr_map (4)'
    Type: SHT_LLVM_PGO_BB_ADDR_MAP
    Entries:
      - Version: 2
        Feature: 0x7
        Address: 0x0000000000000020
        FuncEntryCount: 1000
        BBEntries:
          - ID:            11
            AddressOffset: 0x00000001
            Size:          0x00000002
            Metadata:      0x00000043
            BBFreq:        1000
            Successors:
              - ID:        12
                BrProb:    0xeeeeeeee
              - ID:        13
                BrProb:    0x11111111

## 5) When specifying the description with Entries, the 'Address' field will be
##    zero when omitted.
  - Name: '.llvm_pgo_bb_addr_map (5)'
    Type: SHT_LLVM_PGO_BB_ADDR_MAP
    Entries:
      - Version: 2
        Feature:   0x2
        BBEntries:
          - ID:            12
            AddressOffset: 0x00000001
            Size:          0x00000002
            Metadata:      0x00000003
            BBFreq:        0

## 6) We can override the NumBlocks field with a value different from the
##    actual number of BB Entries.
  - Name: '.llvm_pgo_bb_addr_map (6)'
    Type: SHT_LLVM_PGO_BB_ADDR_MAP
    Entries:
      - Version:   2
        Feature:   0x2
        Address:   0x0000000000000020
        NumBlocks: 2
        BBEntries:
          - ID:            13
            AddressOffset: 0x00000001
            Size:          0x00000002
            Metadata:      0x00000003
            BBFreq:        100

## 7) According to feature we have FuncEntryCount but none is provided in yaml
  - Name: '.llvm_pgo_bb_addr_map (7)'
    Type: SHT_LLVM_PGO_BB_ADDR_MAP
    Entries:
      - Version: 2
        Feature: 0x1
        Address: 0x0000000000000020
        BBEntries:
          - ID:            14
            AddressOffset: 0x00000001
            Size:          0x00000002
            Metadata:      0x00000003
 

## Check we can't use Entries at the same time as either Content or Size.
# RUN: not yaml2obj --docnum=2 -DCONTENT="00" %s 2>&1 | FileCheck %s --check-prefix=INVALID
# RUN: not yaml2obj --docnum=2 -DSIZE="0" %s 2>&1 | FileCheck %s --check-prefix=INVALID

# INVALID: error: "Entries" cannot be used with "Content" or "Size"

--- !ELF
FileHeader:
  Class: ELFCLASS64
  Data:  ELFDATA2LSB
  Type:  ET_EXEC
Sections:
##  Specify Content and Size
  - Name:    '.llvm_pgo_bb_addr_map'
    Type:    SHT_LLVM_PGO_BB_ADDR_MAP
    Entries: []
    Content: [[CONTENT=<none>]]
    Size:    [[SIZE=<none>]]

## Check that yaml2obj generates a warning when we use unsupported versions.
# RUN: yaml2obj --docnum=3  %s 2>&1 | FileCheck %s --check-prefix=INVALID-VERSION
# INVALID-VERSION: warning: unsupported SHT_LLVM_BB_ADDR_MAP version: 3; encoding using the most recent version

--- !ELF
FileHeader:
  Class: ELFCLASS64
  Data:  ELFDATA2LSB
  Type:  ET_EXEC
Sections:
  - Name: '.llvm_pgo_bb_addr_map'
    Type: SHT_LLVM_PGO_BB_ADDR_MAP
    Entries:
##  Specify unsupported version
      - Version: 3

# RUN: yaml2obj --docnum=4  %s 2>&1 | FileCheck %s --check-prefix=INVALID-LOW-VERSION
# INVALID-LOW-VERSION: warning: unsupported SHT_LLVM_PGO_BB_ADDR_MAP version: 1; must use version >= 2

--- !ELF
FileHeader:
  Class: ELFCLASS64
  Data:  ELFDATA2LSB
  Type:  ET_EXEC
Sections:
  - Name: '.llvm_pgo_bb_addr_map'
    Type: SHT_LLVM_PGO_BB_ADDR_MAP
    Entries:
##  Specify low unsupported version
      - Version: 1
